name: Rental-Car

env:
  PACK_NAME: "docker-compose ${{ github.sha }}"
  APP_NAME: "docker-compose"
  SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
  DEPLOY_PACKAGE_NAME: "logparser_${{ github.sha }}.zip"
  HOST: ${{ secrets.HOST }}
  USER: ${{ secrets.USER }}
  PORT: ${{ secrets.PORT }}
  KEY: ${{ secrets.KEY }}
on:
  push:
    branches: 
      - master
  pull_request:
    branches: 
      - main
  workflow_dispatch:

jobs:
  ubuntu:
    runs-on: ubuntu-latest 
    steps:
    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" >> ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        echo -e "Host *\n\tStrictHostKeyChecing no\n\n" > ~/.ssh/config
    - name: git clone
      uses: actions/checkout@v1
      
  python:
    runs-on: ubuntu-latest
    needs: [ubuntu]
    strategy:
      matrix:
        python-version:
        - 'pypy-3.6' # the latest available version of PyPy that supports Python 3.6
#         - 'pypy-3.7' # the latest available version of PyPy that supports Python 3.7
#         - 'pypy-3.7-v7.3.3' # Python 3.7 and PyPy 7.3.3

#         - 'actions/setup-java@v2 / 3
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
    - uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
        python-version: ${{ matrix.python-version }}

    - name: docker build
      run: |
        cd TPN
        docker-compose up -d --force-recreate

    - name: Build with Maven
      run: mvn -B package --file pom.xml

    - name: Create ZIP artifacts
      run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

    - name: Run with Tomcat
      run: mvn tomcat7:run -X

    - name: CleanUp
      run: |
        rm -r ~/.ssh